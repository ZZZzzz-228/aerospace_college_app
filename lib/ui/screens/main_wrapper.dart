import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../providers/auth_provider.dart';
import '../widgets/bottom_nav_bar.dart';

// Public screens
import 'public/auth_screen.dart';
import 'public/contacts_screen.dart';
import 'public/applicant_screen.dart';

// Private screens
import 'private/home_screen.dart';
import 'private/schedule_screen.dart';
import 'private/news_screen.dart';
import 'private/vacancies_screen.dart';
import 'private/profile_screen.dart';

class MainWrapper extends StatelessWidget {
  final String currentScreen;

  const MainWrapper({super.key, required this.currentScreen});

  @override
  Widget build(BuildContext context) {
    return Consumer<AuthProvider>(
      builder: (context, authProvider, child) {
        return Scaffold(
          backgroundColor: const Color(0xFFF5F5F5),
          body: _getScreen(currentScreen, authProvider.isAuth),
          bottomNavigationBar: BottomNavBar(loggedIn: authProvider.isAuth),
        );
      },
    );
  }

  Widget _getScreen(String screen, bool isAuth) {
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    debugPrint('üîÑ MainWrapper: screen=$screen, isAuth=$isAuth');

    // –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã
    if (!isAuth) {
      debugPrint('üì± Public mode - 3 tabs');
      switch (screen) {
        case 'contacts':
          debugPrint('‚úÖ Showing ContactsScreen');
          return const ContactsScreen();
        case 'applicant':
          debugPrint('‚úÖ Showing ApplicantScreen');
          return const ApplicantScreen();
        case 'profile':
          debugPrint('‚úÖ Showing AuthScreen for profile tab');
          return const AuthScreen();
        case 'auth':
        default:
          debugPrint('‚úÖ Showing AuthScreen (default)');
          return const AuthScreen();
      }
    }

    // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã
    debugPrint('üîê Private mode - 5 tabs');
    switch (screen) {
      case 'contacts':
        debugPrint('‚úÖ Showing ContactsScreen (private)');
        return const ContactsScreen();
      case 'schedule':
        debugPrint('‚úÖ Showing ScheduleScreen');
        return const ScheduleScreen();
      case 'news':
        debugPrint('‚úÖ Showing NewsScreen');
        return const NewsScreen();
      case 'vacancies':
        debugPrint('‚úÖ Showing VacanciesScreen');
        return const VacanciesScreen();
      case 'profile':
        debugPrint('‚úÖ Showing ProfileScreen (private)');
        return const ProfileScreen();
      case 'home':
      default:
        debugPrint('‚úÖ Showing HomeScreen (default)');
        return const HomeScreen();
    }
  }
}